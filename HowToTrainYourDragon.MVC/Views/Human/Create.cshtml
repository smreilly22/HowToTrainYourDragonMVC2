@model HowToTrainYourDragon.Model.HumanModel.HumanCreate

@{
    ViewBag.Title = "Create";
}
<body style="background-image: url('../../Images/Character-Image.jpeg'); background-repeat: no-repeat; background-attachment: fixed; background-size: cover; background-color: black; color: white; ">

    <h2>Create</h2>


    @using (Html.BeginForm("Create", "Human", FormMethod.Post, new {enctype ="multipart/form-data"})) 
    {
        @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>HumanCreate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HairColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HairColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HairColor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EyeColor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EyeColor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EyeColor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
            </div>
        </div>



            <div class="form-group">
                @Html.LabelFor(model => model.CurrentLocationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CurrentLocationId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentLocationId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.HasDragon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div>
                        @Html.EditorFor(model => model.HasDragon)
                        @Html.ValidationMessageFor(model => model.HasDragon, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DragonCompanionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DragonCompanionId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DragonCompanionId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.IsEvil, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div>
                        @Html.EditorFor(model => model.IsEvil)
                        @Html.ValidationMessageFor(model => model.IsEvil, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div>
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />

                <p>




                </p>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index", null, new {@style = "color: white"})
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

</body>